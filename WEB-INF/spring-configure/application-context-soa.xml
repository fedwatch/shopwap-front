<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                    http://www.springframework.org/schema/aop
                    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context-4.3.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
                    http://www.springframework.org/schema/util
                    http://www.springframework.org/schema/util/spring-util-4.3.xsd">
    
   <!-- 测试使用 配置   可用节点信息-->
   <!--  
   <bean id="localServerNode" class="soa.thrift.rpc.common.model.ServerNode" 
									p:nodeName="shop_selector"
									p:address = "192.168.88.66"
									p:port="7911"
									p:serverType="selector"
								/>
    <util:set id="shop_selector_set">
    	<ref bean="localServerNode" />
    </util:set>
    
	<bean class="soa.thrift.rpc.client.utils.LocalNodesCacheUtils" >
		<property name="configMap">
			<util:map>
				<entry key="shop_selector" value-ref="shop_selector_set" />
			</util:map>
		</property>
	</bean> 
	-->
	<!-- 测试使用 配置   可用节点信息-->
	
	<bean id="soaClusterModle" class="java.lang.Boolean">
		<constructor-arg type="java.lang.String" index="0" value="${soa.client.clusterModle}" />
		<!--  单机dev开发使用
			<constructor-arg type="java.lang.String" index="0" value="false" /> 
		-->
	</bean> 
                    
    <!-- soa node checker -->     
	<bean id="soaNodeChecker" class="soa.thrift.rpc.client.pool.ServerNodeChecker" />
	
	<!-- soa node register -->
	<bean id="soaRegister" class="soa.thrift.rpc.client.register.RedisRegister" >
		<property name="clusterModel" ref="soaClusterModle" />
		<property name="redisson" ref="redissonClient" />
	</bean>
	
	<!-- transport pool manager -->
	<bean id="soaTransportPoolManager" class="soa.thrift.rpc.client.pool.TransportPoolManager">
		<property name="bufferedSize" value="${soa.client.pool.bufferedsize}" />
		<property name="maxIdle" value="${soa.client.pool.maxIdle}" />
		<property name="maxTotal" value="${soa.client.pool.maxTotal}" />
		<property name="maxWaitMillis" value="${soa.client.pool.maxWaitMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${soa.client.pool.minEvictableIdleTimeMillis}" />
		<property name="minIdle" value="${soa.client.pool.minIdle}" />
		<property name="numTestsPerEvictionRun" value="${soa.client.pool.numTestsPerEvictionRun}" />
		<property name="selectType" value="${soa.client.pool.selectType}" />
		<property name="TestOnBorrow" value="${soa.client.pool.testOnBorrow}" />
		<property name="TestOnCreate" value="${soa.client.pool.testOnCreate}" />
		<property name="TestOnReturn" value="${soa.client.pool.testOnReturn}" />
		<property name="TestWhileIdle" value="${soa.client.pool.testWhileIdle}" />
		<property name="TimeBetweenEvictionRunsMillis" value="${soa.client.pool.timeBetweenEvictionRunsMillis}" />
		<property name="Timeout" value="${soa.client.pool.timeout}" />
		<property name="checker" ref="soaNodeChecker" />
		<property name="register" ref="soaRegister" />
	</bean>
	
	<!-- soa node watcher -->
	<bean id="soaWatcher" class="soa.thrift.rpc.client.register.RedisWatcher">
		<property name="poolManager" ref="soaTransportPoolManager" />
		<property name="redisson" ref="redissonClient" />
	</bean>
	
	<!-- soa node monitor -->
	<bean id="soaMonitor" class="soa.thrift.rpc.client.monitor.Monitor">
		<property name="clusterModel" ref="soaClusterModle" />
		<property name="redisson" ref="redissonClient" />
		<property name="CheckIntervalTime" value="${soa.client.monitor.checkIntervalTime}" />
		<property name="register" ref="soaRegister" />
		<property name="poolManager" ref="soaTransportPoolManager" />
		<property name="wather" ref="soaWatcher" />		
	</bean>
	
	<!-- auto release transport aop -->
	<bean id="tsocketPoolManagerAdvice" class="soa.thrift.rpc.client.aop.TransportManager" >
		<property name="poolmanager" ref="soaTransportPoolManager" />
	</bean>
	<!-- aop config -->
	<aop:config>
		<aop:pointcut id="tsocketPoolManagerPointcut" expression="@annotation(soa.thrift.rpc.client.aop.TransportReleaser)" />
		<aop:aspect id="tsocketPoolManagerAspect" ref="tsocketPoolManagerAdvice">
			<aop:before method="doBefore" pointcut-ref="tsocketPoolManagerPointcut" />
			<aop:after method="doAfter" pointcut-ref="tsocketPoolManagerPointcut" />
			<aop:after-throwing method="doThrow" pointcut-ref="tsocketPoolManagerPointcut"  />
		</aop:aspect>
	</aop:config>
	<!-- client setting -->
	
	
	<!-- implements soa client -->
	<bean id="pingSelectorClient" class="soa.thrift.rpc.client.SelectorClient"  >
		<property name="poolManager" ref="soaTransportPoolManager" />
		<property name="serverName" value="shop_selector" />
		<property name="fullClassName" value="soa.thrift.rpc.common.stub.Ping$Client" />
		<property name="multiplexedProtocolName" value="_heart_beat" />
	</bean>
	
	<!-- <bean id="empOperatorSelectorClient" class="soa.thrift.rpc.client.SelectorClient" >
		<property name="poolManager" ref="soaTransportPoolManager" />
		<property name="serverName" value="shop_selector" />
		<property name="fullClassName" value="thrift.shop.stub.thrift.IEmpOperator$Client" />
		<property name="multiplexedProtocolName" value="emp_operator" />
	</bean> -->
	
</beans>